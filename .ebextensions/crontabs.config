#
# This configuration uses server's cron to run scripts at a given schedule on
# one and only one instance running the app.
#
# Warning! The IAM Role used for the Beanstalk instances needs ec2:DescribeTags and
# autoscaling:DescribeAutoScalingGroups permissions
#
# Inspired from:
#     http://stackoverflow.com/a/32795107/1472121
#     https://easyengine.io/tutorials/wordpress/wp-cron-crontab/
#

files:
  "/etc/cron.d/cron_ebextensions":
    mode: "000644"
    owner: root
    group: root
    content: |
      * * * * * root /opt/cron_wp-cron.sh

  # The script given here is designed for a WordPress site, as it calls wp-cron.
  "/opt/cron_wp-cron.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      /opt/test_cron.sh || exit
      echo `basename "$0"` "cron running at" `date --iso-8601='seconds'` >> /var/log/cron_wp-cron.log
      # Now do tasks that should only run on 1 instance ...
      curl -vs -o /dev/null http://127.0.0.1/wp-cron.php > /dev/null 2>&1

  # Utility script: am I running on the first instance in the autoscaling group ?
  "/opt/test_cron.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      METADATA=/opt/aws/bin/ec2-metadata
      INSTANCE_ID=`$METADATA -i | awk '{print $2}'`
      REGION=`$METADATA -z | awk '{print substr($2, 0, length($2)-1)}'`

      # Find our Auto Scaling Group name.
      ASG=`aws ec2 describe-tags --filters "Name=resource-id,Values=$INSTANCE_ID" \
        --region $REGION --output text | awk '/aws:autoscaling:groupName/ {print $5}'`

      # Find the first instance in the Group
      FIRST=`aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $ASG \
        --region $REGION --output text | awk '$6=="InService" {print $4}' | sort | head -1`

      # Test if they're the same.
      [ "$FIRST" = "$INSTANCE_ID" ]

commands:
  rm_old_cron:
    command: "rm *.bak"
    cwd: "/etc/cron.d"
    ignoreErrors: true
